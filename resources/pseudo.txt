Reference string with ten pages numbered 0-9:
7012030423

Implementing the OPT algo
    We receive an access num (from ref string)
    We need to store this ref string in an array/arrlist
    We need to create a DS the size of N which is specified by the user
    + this will be the number of physical frames we have

    int hits
    int misses

    for each item (num) in the reference string array:
    if there is room in the DS && number is not in DS
        add the access (num) to the DS
        misses++
        print the DS
    else if the DS is full && the number is not already in the DS
        [
        we want to look ahead in the ref string and see which #s appear first
        + in my mind I am "checking off" numbers as I go and if my list of
        + "checked off" numbers is size of the DS -1 then I know that the
        + number which is not contained on the "checked off" list should be evicted

        with arrlist i can copy the current state (access nums) and then remove
        them until there is one left - this will be the victim frame

        + once i find the victim frame i want to remove that number from the
        + currentPages arrlist and i want to add the number from refString we are
        + currently looking at, which should be at refString[index] because we 
        + passed it in

        currentPages.remove(currentPages.indexOf(victimFrame))
        currentPages.add(refString[index])

        i also need the index from which to start "looking forward" to check off
        ]

        maybe create a separate method which returns the number which is in the
        + DS but NOT in the "checked off" list

        evict the designated number
        add the new requested access number to the DS
        misses++
        print the DS
    else
        hits++





Displaying the info







Implementing the NEW algo
    when i am Implementing LRU mentally i am reversing opt.
    + that is, i am looking BACKWARD at the reference list starting at a given
    + index and i "check off" (remove with the capabilities of an arrlist) #s
    
    so, i believe i can do the same copy and remove process in the other
    + direction (decrement) and set victimFrame when 









Displaying the info (could be different)

Making the loop run only if the user hits enter
    